// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Boombox_HTLx_Messaging.proto

#ifndef PROTOBUF_Boombox_5fHTLx_5fMessaging_2eproto__INCLUDED
#define PROTOBUF_Boombox_5fHTLx_5fMessaging_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace HTL_Messaging_schema1 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Boombox_5fHTLx_5fMessaging_2eproto();
void protobuf_AssignDesc_Boombox_5fHTLx_5fMessaging_2eproto();
void protobuf_ShutdownFile_Boombox_5fHTLx_5fMessaging_2eproto();

class AttemptReconnect;
class ReqTransfer;
class RequestCompleted;
class SchemaAgreement;
class SessionData;
class serverConfig;

enum serverConfig_MessageID {
  serverConfig_MessageID_ID = 1
};
bool serverConfig_MessageID_IsValid(int value);
const serverConfig_MessageID serverConfig_MessageID_MessageID_MIN = serverConfig_MessageID_ID;
const serverConfig_MessageID serverConfig_MessageID_MessageID_MAX = serverConfig_MessageID_ID;
const int serverConfig_MessageID_MessageID_ARRAYSIZE = serverConfig_MessageID_MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* serverConfig_MessageID_descriptor();
inline const ::std::string& serverConfig_MessageID_Name(serverConfig_MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    serverConfig_MessageID_descriptor(), value);
}
inline bool serverConfig_MessageID_Parse(
    const ::std::string& name, serverConfig_MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<serverConfig_MessageID>(
    serverConfig_MessageID_descriptor(), name, value);
}
enum SessionData_MessageID {
  SessionData_MessageID_ID = 2
};
bool SessionData_MessageID_IsValid(int value);
const SessionData_MessageID SessionData_MessageID_MessageID_MIN = SessionData_MessageID_ID;
const SessionData_MessageID SessionData_MessageID_MessageID_MAX = SessionData_MessageID_ID;
const int SessionData_MessageID_MessageID_ARRAYSIZE = SessionData_MessageID_MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SessionData_MessageID_descriptor();
inline const ::std::string& SessionData_MessageID_Name(SessionData_MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SessionData_MessageID_descriptor(), value);
}
inline bool SessionData_MessageID_Parse(
    const ::std::string& name, SessionData_MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SessionData_MessageID>(
    SessionData_MessageID_descriptor(), name, value);
}
enum ReqTransfer_MessageID {
  ReqTransfer_MessageID_ID = 3
};
bool ReqTransfer_MessageID_IsValid(int value);
const ReqTransfer_MessageID ReqTransfer_MessageID_MessageID_MIN = ReqTransfer_MessageID_ID;
const ReqTransfer_MessageID ReqTransfer_MessageID_MessageID_MAX = ReqTransfer_MessageID_ID;
const int ReqTransfer_MessageID_MessageID_ARRAYSIZE = ReqTransfer_MessageID_MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReqTransfer_MessageID_descriptor();
inline const ::std::string& ReqTransfer_MessageID_Name(ReqTransfer_MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReqTransfer_MessageID_descriptor(), value);
}
inline bool ReqTransfer_MessageID_Parse(
    const ::std::string& name, ReqTransfer_MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReqTransfer_MessageID>(
    ReqTransfer_MessageID_descriptor(), name, value);
}
enum RequestCompleted_MessageID {
  RequestCompleted_MessageID_ID = 5
};
bool RequestCompleted_MessageID_IsValid(int value);
const RequestCompleted_MessageID RequestCompleted_MessageID_MessageID_MIN = RequestCompleted_MessageID_ID;
const RequestCompleted_MessageID RequestCompleted_MessageID_MessageID_MAX = RequestCompleted_MessageID_ID;
const int RequestCompleted_MessageID_MessageID_ARRAYSIZE = RequestCompleted_MessageID_MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestCompleted_MessageID_descriptor();
inline const ::std::string& RequestCompleted_MessageID_Name(RequestCompleted_MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestCompleted_MessageID_descriptor(), value);
}
inline bool RequestCompleted_MessageID_Parse(
    const ::std::string& name, RequestCompleted_MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestCompleted_MessageID>(
    RequestCompleted_MessageID_descriptor(), name, value);
}
enum AttemptReconnect_MessageID {
  AttemptReconnect_MessageID_ID = 6
};
bool AttemptReconnect_MessageID_IsValid(int value);
const AttemptReconnect_MessageID AttemptReconnect_MessageID_MessageID_MIN = AttemptReconnect_MessageID_ID;
const AttemptReconnect_MessageID AttemptReconnect_MessageID_MessageID_MAX = AttemptReconnect_MessageID_ID;
const int AttemptReconnect_MessageID_MessageID_ARRAYSIZE = AttemptReconnect_MessageID_MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* AttemptReconnect_MessageID_descriptor();
inline const ::std::string& AttemptReconnect_MessageID_Name(AttemptReconnect_MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    AttemptReconnect_MessageID_descriptor(), value);
}
inline bool AttemptReconnect_MessageID_Parse(
    const ::std::string& name, AttemptReconnect_MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AttemptReconnect_MessageID>(
    AttemptReconnect_MessageID_descriptor(), name, value);
}
enum SchemaAgreement_MessageID {
  SchemaAgreement_MessageID_ID = 7
};
bool SchemaAgreement_MessageID_IsValid(int value);
const SchemaAgreement_MessageID SchemaAgreement_MessageID_MessageID_MIN = SchemaAgreement_MessageID_ID;
const SchemaAgreement_MessageID SchemaAgreement_MessageID_MessageID_MAX = SchemaAgreement_MessageID_ID;
const int SchemaAgreement_MessageID_MessageID_ARRAYSIZE = SchemaAgreement_MessageID_MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* SchemaAgreement_MessageID_descriptor();
inline const ::std::string& SchemaAgreement_MessageID_Name(SchemaAgreement_MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    SchemaAgreement_MessageID_descriptor(), value);
}
inline bool SchemaAgreement_MessageID_Parse(
    const ::std::string& name, SchemaAgreement_MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SchemaAgreement_MessageID>(
    SchemaAgreement_MessageID_descriptor(), name, value);
}
// ===================================================================

class serverConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HTL_Messaging_schema1.serverConfig) */ {
 public:
  serverConfig();
  virtual ~serverConfig();

  serverConfig(const serverConfig& from);

  inline serverConfig& operator=(const serverConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const serverConfig& default_instance();

  void Swap(serverConfig* other);

  // implements Message ----------------------------------------------

  inline serverConfig* New() const { return New(NULL); }

  serverConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const serverConfig& from);
  void MergeFrom(const serverConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(serverConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef serverConfig_MessageID MessageID;
  static const MessageID ID =
    serverConfig_MessageID_ID;
  static inline bool MessageID_IsValid(int value) {
    return serverConfig_MessageID_IsValid(value);
  }
  static const MessageID MessageID_MIN =
    serverConfig_MessageID_MessageID_MIN;
  static const MessageID MessageID_MAX =
    serverConfig_MessageID_MessageID_MAX;
  static const int MessageID_ARRAYSIZE =
    serverConfig_MessageID_MessageID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageID_descriptor() {
    return serverConfig_MessageID_descriptor();
  }
  static inline const ::std::string& MessageID_Name(MessageID value) {
    return serverConfig_MessageID_Name(value);
  }
  static inline bool MessageID_Parse(const ::std::string& name,
      MessageID* value) {
    return serverConfig_MessageID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 tcpPort = 1;
  bool has_tcpport() const;
  void clear_tcpport();
  static const int kTcpPortFieldNumber = 1;
  ::google::protobuf::uint32 tcpport() const;
  void set_tcpport(::google::protobuf::uint32 value);

  // required uint32 udpPort = 2;
  bool has_udpport() const;
  void clear_udpport();
  static const int kUdpPortFieldNumber = 2;
  ::google::protobuf::uint32 udpport() const;
  void set_udpport(::google::protobuf::uint32 value);

  // required uint32 udpMac = 3;
  bool has_udpmac() const;
  void clear_udpmac();
  static const int kUdpMacFieldNumber = 3;
  ::google::protobuf::uint32 udpmac() const;
  void set_udpmac(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HTL_Messaging_schema1.serverConfig)
 private:
  inline void set_has_tcpport();
  inline void clear_has_tcpport();
  inline void set_has_udpport();
  inline void clear_has_udpport();
  inline void set_has_udpmac();
  inline void clear_has_udpmac();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 tcpport_;
  ::google::protobuf::uint32 udpport_;
  ::google::protobuf::uint32 udpmac_;
  friend void  protobuf_AddDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_AssignDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_ShutdownFile_Boombox_5fHTLx_5fMessaging_2eproto();

  void InitAsDefaultInstance();
  static serverConfig* default_instance_;
};
// -------------------------------------------------------------------

class SessionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HTL_Messaging_schema1.SessionData) */ {
 public:
  SessionData();
  virtual ~SessionData();

  SessionData(const SessionData& from);

  inline SessionData& operator=(const SessionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SessionData& default_instance();

  void Swap(SessionData* other);

  // implements Message ----------------------------------------------

  inline SessionData* New() const { return New(NULL); }

  SessionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SessionData& from);
  void MergeFrom(const SessionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SessionData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SessionData_MessageID MessageID;
  static const MessageID ID =
    SessionData_MessageID_ID;
  static inline bool MessageID_IsValid(int value) {
    return SessionData_MessageID_IsValid(value);
  }
  static const MessageID MessageID_MIN =
    SessionData_MessageID_MessageID_MIN;
  static const MessageID MessageID_MAX =
    SessionData_MessageID_MessageID_MAX;
  static const int MessageID_ARRAYSIZE =
    SessionData_MessageID_MessageID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageID_descriptor() {
    return SessionData_MessageID_descriptor();
  }
  static inline const ::std::string& MessageID_Name(MessageID value) {
    return SessionData_MessageID_Name(value);
  }
  static inline bool MessageID_Parse(const ::std::string& name,
      MessageID* value) {
    return SessionData_MessageID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 bytesPerLBA = 1;
  bool has_bytesperlba() const;
  void clear_bytesperlba();
  static const int kBytesPerLBAFieldNumber = 1;
  ::google::protobuf::uint32 bytesperlba() const;
  void set_bytesperlba(::google::protobuf::uint32 value);

  // required uint32 maxBlocksPerPacket = 2;
  bool has_maxblocksperpacket() const;
  void clear_maxblocksperpacket();
  static const int kMaxBlocksPerPacketFieldNumber = 2;
  ::google::protobuf::uint32 maxblocksperpacket() const;
  void set_maxblocksperpacket(::google::protobuf::uint32 value);

  // required uint32 totalBlocks = 3;
  bool has_totalblocks() const;
  void clear_totalblocks();
  static const int kTotalBlocksFieldNumber = 3;
  ::google::protobuf::uint32 totalblocks() const;
  void set_totalblocks(::google::protobuf::uint32 value);

  // required uint32 firstBlock = 4;
  bool has_firstblock() const;
  void clear_firstblock();
  static const int kFirstBlockFieldNumber = 4;
  ::google::protobuf::uint32 firstblock() const;
  void set_firstblock(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HTL_Messaging_schema1.SessionData)
 private:
  inline void set_has_bytesperlba();
  inline void clear_has_bytesperlba();
  inline void set_has_maxblocksperpacket();
  inline void clear_has_maxblocksperpacket();
  inline void set_has_totalblocks();
  inline void clear_has_totalblocks();
  inline void set_has_firstblock();
  inline void clear_has_firstblock();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 bytesperlba_;
  ::google::protobuf::uint32 maxblocksperpacket_;
  ::google::protobuf::uint32 totalblocks_;
  ::google::protobuf::uint32 firstblock_;
  friend void  protobuf_AddDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_AssignDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_ShutdownFile_Boombox_5fHTLx_5fMessaging_2eproto();

  void InitAsDefaultInstance();
  static SessionData* default_instance_;
};
// -------------------------------------------------------------------

class ReqTransfer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HTL_Messaging_schema1.ReqTransfer) */ {
 public:
  ReqTransfer();
  virtual ~ReqTransfer();

  ReqTransfer(const ReqTransfer& from);

  inline ReqTransfer& operator=(const ReqTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqTransfer& default_instance();

  void Swap(ReqTransfer* other);

  // implements Message ----------------------------------------------

  inline ReqTransfer* New() const { return New(NULL); }

  ReqTransfer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqTransfer& from);
  void MergeFrom(const ReqTransfer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReqTransfer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReqTransfer_MessageID MessageID;
  static const MessageID ID =
    ReqTransfer_MessageID_ID;
  static inline bool MessageID_IsValid(int value) {
    return ReqTransfer_MessageID_IsValid(value);
  }
  static const MessageID MessageID_MIN =
    ReqTransfer_MessageID_MessageID_MIN;
  static const MessageID MessageID_MAX =
    ReqTransfer_MessageID_MessageID_MAX;
  static const int MessageID_ARRAYSIZE =
    ReqTransfer_MessageID_MessageID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageID_descriptor() {
    return ReqTransfer_MessageID_descriptor();
  }
  static inline const ::std::string& MessageID_Name(MessageID value) {
    return ReqTransfer_MessageID_Name(value);
  }
  static inline bool MessageID_Parse(const ::std::string& name,
      MessageID* value) {
    return ReqTransfer_MessageID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 transferID = 1;
  bool has_transferid() const;
  void clear_transferid();
  static const int kTransferIDFieldNumber = 1;
  ::google::protobuf::uint32 transferid() const;
  void set_transferid(::google::protobuf::uint32 value);

  // required uint32 startingBlockAddr = 2;
  bool has_startingblockaddr() const;
  void clear_startingblockaddr();
  static const int kStartingBlockAddrFieldNumber = 2;
  ::google::protobuf::uint32 startingblockaddr() const;
  void set_startingblockaddr(::google::protobuf::uint32 value);

  // required uint32 blocksInTrans = 3;
  bool has_blocksintrans() const;
  void clear_blocksintrans();
  static const int kBlocksInTransFieldNumber = 3;
  ::google::protobuf::uint32 blocksintrans() const;
  void set_blocksintrans(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HTL_Messaging_schema1.ReqTransfer)
 private:
  inline void set_has_transferid();
  inline void clear_has_transferid();
  inline void set_has_startingblockaddr();
  inline void clear_has_startingblockaddr();
  inline void set_has_blocksintrans();
  inline void clear_has_blocksintrans();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 transferid_;
  ::google::protobuf::uint32 startingblockaddr_;
  ::google::protobuf::uint32 blocksintrans_;
  friend void  protobuf_AddDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_AssignDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_ShutdownFile_Boombox_5fHTLx_5fMessaging_2eproto();

  void InitAsDefaultInstance();
  static ReqTransfer* default_instance_;
};
// -------------------------------------------------------------------

class RequestCompleted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HTL_Messaging_schema1.RequestCompleted) */ {
 public:
  RequestCompleted();
  virtual ~RequestCompleted();

  RequestCompleted(const RequestCompleted& from);

  inline RequestCompleted& operator=(const RequestCompleted& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCompleted& default_instance();

  void Swap(RequestCompleted* other);

  // implements Message ----------------------------------------------

  inline RequestCompleted* New() const { return New(NULL); }

  RequestCompleted* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCompleted& from);
  void MergeFrom(const RequestCompleted& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestCompleted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RequestCompleted_MessageID MessageID;
  static const MessageID ID =
    RequestCompleted_MessageID_ID;
  static inline bool MessageID_IsValid(int value) {
    return RequestCompleted_MessageID_IsValid(value);
  }
  static const MessageID MessageID_MIN =
    RequestCompleted_MessageID_MessageID_MIN;
  static const MessageID MessageID_MAX =
    RequestCompleted_MessageID_MessageID_MAX;
  static const int MessageID_ARRAYSIZE =
    RequestCompleted_MessageID_MessageID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageID_descriptor() {
    return RequestCompleted_MessageID_descriptor();
  }
  static inline const ::std::string& MessageID_Name(MessageID value) {
    return RequestCompleted_MessageID_Name(value);
  }
  static inline bool MessageID_Parse(const ::std::string& name,
      MessageID* value) {
    return RequestCompleted_MessageID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 transferID = 1;
  bool has_transferid() const;
  void clear_transferid();
  static const int kTransferIDFieldNumber = 1;
  ::google::protobuf::uint32 transferid() const;
  void set_transferid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HTL_Messaging_schema1.RequestCompleted)
 private:
  inline void set_has_transferid();
  inline void clear_has_transferid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 transferid_;
  friend void  protobuf_AddDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_AssignDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_ShutdownFile_Boombox_5fHTLx_5fMessaging_2eproto();

  void InitAsDefaultInstance();
  static RequestCompleted* default_instance_;
};
// -------------------------------------------------------------------

class AttemptReconnect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HTL_Messaging_schema1.AttemptReconnect) */ {
 public:
  AttemptReconnect();
  virtual ~AttemptReconnect();

  AttemptReconnect(const AttemptReconnect& from);

  inline AttemptReconnect& operator=(const AttemptReconnect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttemptReconnect& default_instance();

  void Swap(AttemptReconnect* other);

  // implements Message ----------------------------------------------

  inline AttemptReconnect* New() const { return New(NULL); }

  AttemptReconnect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttemptReconnect& from);
  void MergeFrom(const AttemptReconnect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttemptReconnect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AttemptReconnect_MessageID MessageID;
  static const MessageID ID =
    AttemptReconnect_MessageID_ID;
  static inline bool MessageID_IsValid(int value) {
    return AttemptReconnect_MessageID_IsValid(value);
  }
  static const MessageID MessageID_MIN =
    AttemptReconnect_MessageID_MessageID_MIN;
  static const MessageID MessageID_MAX =
    AttemptReconnect_MessageID_MessageID_MAX;
  static const int MessageID_ARRAYSIZE =
    AttemptReconnect_MessageID_MessageID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageID_descriptor() {
    return AttemptReconnect_MessageID_descriptor();
  }
  static inline const ::std::string& MessageID_Name(MessageID value) {
    return AttemptReconnect_MessageID_Name(value);
  }
  static inline bool MessageID_Parse(const ::std::string& name,
      MessageID* value) {
    return AttemptReconnect_MessageID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 bytesPerLBA = 1;
  bool has_bytesperlba() const;
  void clear_bytesperlba();
  static const int kBytesPerLBAFieldNumber = 1;
  ::google::protobuf::uint32 bytesperlba() const;
  void set_bytesperlba(::google::protobuf::uint32 value);

  // required uint32 maxBlocksPerPacket = 2;
  bool has_maxblocksperpacket() const;
  void clear_maxblocksperpacket();
  static const int kMaxBlocksPerPacketFieldNumber = 2;
  ::google::protobuf::uint32 maxblocksperpacket() const;
  void set_maxblocksperpacket(::google::protobuf::uint32 value);

  // required uint32 totalBlocks = 3;
  bool has_totalblocks() const;
  void clear_totalblocks();
  static const int kTotalBlocksFieldNumber = 3;
  ::google::protobuf::uint32 totalblocks() const;
  void set_totalblocks(::google::protobuf::uint32 value);

  // required uint32 firstBlock = 4;
  bool has_firstblock() const;
  void clear_firstblock();
  static const int kFirstBlockFieldNumber = 4;
  ::google::protobuf::uint32 firstblock() const;
  void set_firstblock(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HTL_Messaging_schema1.AttemptReconnect)
 private:
  inline void set_has_bytesperlba();
  inline void clear_has_bytesperlba();
  inline void set_has_maxblocksperpacket();
  inline void clear_has_maxblocksperpacket();
  inline void set_has_totalblocks();
  inline void clear_has_totalblocks();
  inline void set_has_firstblock();
  inline void clear_has_firstblock();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 bytesperlba_;
  ::google::protobuf::uint32 maxblocksperpacket_;
  ::google::protobuf::uint32 totalblocks_;
  ::google::protobuf::uint32 firstblock_;
  friend void  protobuf_AddDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_AssignDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_ShutdownFile_Boombox_5fHTLx_5fMessaging_2eproto();

  void InitAsDefaultInstance();
  static AttemptReconnect* default_instance_;
};
// -------------------------------------------------------------------

class SchemaAgreement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:HTL_Messaging_schema1.SchemaAgreement) */ {
 public:
  SchemaAgreement();
  virtual ~SchemaAgreement();

  SchemaAgreement(const SchemaAgreement& from);

  inline SchemaAgreement& operator=(const SchemaAgreement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SchemaAgreement& default_instance();

  void Swap(SchemaAgreement* other);

  // implements Message ----------------------------------------------

  inline SchemaAgreement* New() const { return New(NULL); }

  SchemaAgreement* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SchemaAgreement& from);
  void MergeFrom(const SchemaAgreement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SchemaAgreement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef SchemaAgreement_MessageID MessageID;
  static const MessageID ID =
    SchemaAgreement_MessageID_ID;
  static inline bool MessageID_IsValid(int value) {
    return SchemaAgreement_MessageID_IsValid(value);
  }
  static const MessageID MessageID_MIN =
    SchemaAgreement_MessageID_MessageID_MIN;
  static const MessageID MessageID_MAX =
    SchemaAgreement_MessageID_MessageID_MAX;
  static const int MessageID_ARRAYSIZE =
    SchemaAgreement_MessageID_MessageID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageID_descriptor() {
    return SchemaAgreement_MessageID_descriptor();
  }
  static inline const ::std::string& MessageID_Name(MessageID value) {
    return SchemaAgreement_MessageID_Name(value);
  }
  static inline bool MessageID_Parse(const ::std::string& name,
      MessageID* value) {
    return SchemaAgreement_MessageID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 schemaVersion = 1;
  bool has_schemaversion() const;
  void clear_schemaversion();
  static const int kSchemaVersionFieldNumber = 1;
  ::google::protobuf::uint32 schemaversion() const;
  void set_schemaversion(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:HTL_Messaging_schema1.SchemaAgreement)
 private:
  inline void set_has_schemaversion();
  inline void clear_has_schemaversion();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 schemaversion_;
  friend void  protobuf_AddDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_AssignDesc_Boombox_5fHTLx_5fMessaging_2eproto();
  friend void protobuf_ShutdownFile_Boombox_5fHTLx_5fMessaging_2eproto();

  void InitAsDefaultInstance();
  static SchemaAgreement* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// serverConfig

// required uint32 tcpPort = 1;
inline bool serverConfig::has_tcpport() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void serverConfig::set_has_tcpport() {
  _has_bits_[0] |= 0x00000001u;
}
inline void serverConfig::clear_has_tcpport() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void serverConfig::clear_tcpport() {
  tcpport_ = 0u;
  clear_has_tcpport();
}
inline ::google::protobuf::uint32 serverConfig::tcpport() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.serverConfig.tcpPort)
  return tcpport_;
}
inline void serverConfig::set_tcpport(::google::protobuf::uint32 value) {
  set_has_tcpport();
  tcpport_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.serverConfig.tcpPort)
}

// required uint32 udpPort = 2;
inline bool serverConfig::has_udpport() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void serverConfig::set_has_udpport() {
  _has_bits_[0] |= 0x00000002u;
}
inline void serverConfig::clear_has_udpport() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void serverConfig::clear_udpport() {
  udpport_ = 0u;
  clear_has_udpport();
}
inline ::google::protobuf::uint32 serverConfig::udpport() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.serverConfig.udpPort)
  return udpport_;
}
inline void serverConfig::set_udpport(::google::protobuf::uint32 value) {
  set_has_udpport();
  udpport_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.serverConfig.udpPort)
}

// required uint32 udpMac = 3;
inline bool serverConfig::has_udpmac() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void serverConfig::set_has_udpmac() {
  _has_bits_[0] |= 0x00000004u;
}
inline void serverConfig::clear_has_udpmac() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void serverConfig::clear_udpmac() {
  udpmac_ = 0u;
  clear_has_udpmac();
}
inline ::google::protobuf::uint32 serverConfig::udpmac() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.serverConfig.udpMac)
  return udpmac_;
}
inline void serverConfig::set_udpmac(::google::protobuf::uint32 value) {
  set_has_udpmac();
  udpmac_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.serverConfig.udpMac)
}

// -------------------------------------------------------------------

// SessionData

// required uint32 bytesPerLBA = 1;
inline bool SessionData::has_bytesperlba() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SessionData::set_has_bytesperlba() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SessionData::clear_has_bytesperlba() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SessionData::clear_bytesperlba() {
  bytesperlba_ = 0u;
  clear_has_bytesperlba();
}
inline ::google::protobuf::uint32 SessionData::bytesperlba() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.SessionData.bytesPerLBA)
  return bytesperlba_;
}
inline void SessionData::set_bytesperlba(::google::protobuf::uint32 value) {
  set_has_bytesperlba();
  bytesperlba_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.SessionData.bytesPerLBA)
}

// required uint32 maxBlocksPerPacket = 2;
inline bool SessionData::has_maxblocksperpacket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SessionData::set_has_maxblocksperpacket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SessionData::clear_has_maxblocksperpacket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SessionData::clear_maxblocksperpacket() {
  maxblocksperpacket_ = 0u;
  clear_has_maxblocksperpacket();
}
inline ::google::protobuf::uint32 SessionData::maxblocksperpacket() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.SessionData.maxBlocksPerPacket)
  return maxblocksperpacket_;
}
inline void SessionData::set_maxblocksperpacket(::google::protobuf::uint32 value) {
  set_has_maxblocksperpacket();
  maxblocksperpacket_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.SessionData.maxBlocksPerPacket)
}

// required uint32 totalBlocks = 3;
inline bool SessionData::has_totalblocks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SessionData::set_has_totalblocks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SessionData::clear_has_totalblocks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SessionData::clear_totalblocks() {
  totalblocks_ = 0u;
  clear_has_totalblocks();
}
inline ::google::protobuf::uint32 SessionData::totalblocks() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.SessionData.totalBlocks)
  return totalblocks_;
}
inline void SessionData::set_totalblocks(::google::protobuf::uint32 value) {
  set_has_totalblocks();
  totalblocks_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.SessionData.totalBlocks)
}

// required uint32 firstBlock = 4;
inline bool SessionData::has_firstblock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SessionData::set_has_firstblock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SessionData::clear_has_firstblock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SessionData::clear_firstblock() {
  firstblock_ = 0u;
  clear_has_firstblock();
}
inline ::google::protobuf::uint32 SessionData::firstblock() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.SessionData.firstBlock)
  return firstblock_;
}
inline void SessionData::set_firstblock(::google::protobuf::uint32 value) {
  set_has_firstblock();
  firstblock_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.SessionData.firstBlock)
}

// -------------------------------------------------------------------

// ReqTransfer

// required uint32 transferID = 1;
inline bool ReqTransfer::has_transferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqTransfer::set_has_transferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqTransfer::clear_has_transferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqTransfer::clear_transferid() {
  transferid_ = 0u;
  clear_has_transferid();
}
inline ::google::protobuf::uint32 ReqTransfer::transferid() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.ReqTransfer.transferID)
  return transferid_;
}
inline void ReqTransfer::set_transferid(::google::protobuf::uint32 value) {
  set_has_transferid();
  transferid_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.ReqTransfer.transferID)
}

// required uint32 startingBlockAddr = 2;
inline bool ReqTransfer::has_startingblockaddr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqTransfer::set_has_startingblockaddr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqTransfer::clear_has_startingblockaddr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqTransfer::clear_startingblockaddr() {
  startingblockaddr_ = 0u;
  clear_has_startingblockaddr();
}
inline ::google::protobuf::uint32 ReqTransfer::startingblockaddr() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.ReqTransfer.startingBlockAddr)
  return startingblockaddr_;
}
inline void ReqTransfer::set_startingblockaddr(::google::protobuf::uint32 value) {
  set_has_startingblockaddr();
  startingblockaddr_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.ReqTransfer.startingBlockAddr)
}

// required uint32 blocksInTrans = 3;
inline bool ReqTransfer::has_blocksintrans() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqTransfer::set_has_blocksintrans() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqTransfer::clear_has_blocksintrans() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqTransfer::clear_blocksintrans() {
  blocksintrans_ = 0u;
  clear_has_blocksintrans();
}
inline ::google::protobuf::uint32 ReqTransfer::blocksintrans() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.ReqTransfer.blocksInTrans)
  return blocksintrans_;
}
inline void ReqTransfer::set_blocksintrans(::google::protobuf::uint32 value) {
  set_has_blocksintrans();
  blocksintrans_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.ReqTransfer.blocksInTrans)
}

// -------------------------------------------------------------------

// RequestCompleted

// required uint32 transferID = 1;
inline bool RequestCompleted::has_transferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCompleted::set_has_transferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCompleted::clear_has_transferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCompleted::clear_transferid() {
  transferid_ = 0u;
  clear_has_transferid();
}
inline ::google::protobuf::uint32 RequestCompleted::transferid() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.RequestCompleted.transferID)
  return transferid_;
}
inline void RequestCompleted::set_transferid(::google::protobuf::uint32 value) {
  set_has_transferid();
  transferid_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.RequestCompleted.transferID)
}

// -------------------------------------------------------------------

// AttemptReconnect

// required uint32 bytesPerLBA = 1;
inline bool AttemptReconnect::has_bytesperlba() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttemptReconnect::set_has_bytesperlba() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttemptReconnect::clear_has_bytesperlba() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttemptReconnect::clear_bytesperlba() {
  bytesperlba_ = 0u;
  clear_has_bytesperlba();
}
inline ::google::protobuf::uint32 AttemptReconnect::bytesperlba() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.AttemptReconnect.bytesPerLBA)
  return bytesperlba_;
}
inline void AttemptReconnect::set_bytesperlba(::google::protobuf::uint32 value) {
  set_has_bytesperlba();
  bytesperlba_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.AttemptReconnect.bytesPerLBA)
}

// required uint32 maxBlocksPerPacket = 2;
inline bool AttemptReconnect::has_maxblocksperpacket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttemptReconnect::set_has_maxblocksperpacket() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttemptReconnect::clear_has_maxblocksperpacket() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttemptReconnect::clear_maxblocksperpacket() {
  maxblocksperpacket_ = 0u;
  clear_has_maxblocksperpacket();
}
inline ::google::protobuf::uint32 AttemptReconnect::maxblocksperpacket() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.AttemptReconnect.maxBlocksPerPacket)
  return maxblocksperpacket_;
}
inline void AttemptReconnect::set_maxblocksperpacket(::google::protobuf::uint32 value) {
  set_has_maxblocksperpacket();
  maxblocksperpacket_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.AttemptReconnect.maxBlocksPerPacket)
}

// required uint32 totalBlocks = 3;
inline bool AttemptReconnect::has_totalblocks() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttemptReconnect::set_has_totalblocks() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttemptReconnect::clear_has_totalblocks() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttemptReconnect::clear_totalblocks() {
  totalblocks_ = 0u;
  clear_has_totalblocks();
}
inline ::google::protobuf::uint32 AttemptReconnect::totalblocks() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.AttemptReconnect.totalBlocks)
  return totalblocks_;
}
inline void AttemptReconnect::set_totalblocks(::google::protobuf::uint32 value) {
  set_has_totalblocks();
  totalblocks_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.AttemptReconnect.totalBlocks)
}

// required uint32 firstBlock = 4;
inline bool AttemptReconnect::has_firstblock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttemptReconnect::set_has_firstblock() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttemptReconnect::clear_has_firstblock() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttemptReconnect::clear_firstblock() {
  firstblock_ = 0u;
  clear_has_firstblock();
}
inline ::google::protobuf::uint32 AttemptReconnect::firstblock() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.AttemptReconnect.firstBlock)
  return firstblock_;
}
inline void AttemptReconnect::set_firstblock(::google::protobuf::uint32 value) {
  set_has_firstblock();
  firstblock_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.AttemptReconnect.firstBlock)
}

// -------------------------------------------------------------------

// SchemaAgreement

// required uint32 schemaVersion = 1;
inline bool SchemaAgreement::has_schemaversion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SchemaAgreement::set_has_schemaversion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SchemaAgreement::clear_has_schemaversion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SchemaAgreement::clear_schemaversion() {
  schemaversion_ = 0u;
  clear_has_schemaversion();
}
inline ::google::protobuf::uint32 SchemaAgreement::schemaversion() const {
  // @@protoc_insertion_point(field_get:HTL_Messaging_schema1.SchemaAgreement.schemaVersion)
  return schemaversion_;
}
inline void SchemaAgreement::set_schemaversion(::google::protobuf::uint32 value) {
  set_has_schemaversion();
  schemaversion_ = value;
  // @@protoc_insertion_point(field_set:HTL_Messaging_schema1.SchemaAgreement.schemaVersion)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace HTL_Messaging_schema1

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::HTL_Messaging_schema1::serverConfig_MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HTL_Messaging_schema1::serverConfig_MessageID>() {
  return ::HTL_Messaging_schema1::serverConfig_MessageID_descriptor();
}
template <> struct is_proto_enum< ::HTL_Messaging_schema1::SessionData_MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HTL_Messaging_schema1::SessionData_MessageID>() {
  return ::HTL_Messaging_schema1::SessionData_MessageID_descriptor();
}
template <> struct is_proto_enum< ::HTL_Messaging_schema1::ReqTransfer_MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HTL_Messaging_schema1::ReqTransfer_MessageID>() {
  return ::HTL_Messaging_schema1::ReqTransfer_MessageID_descriptor();
}
template <> struct is_proto_enum< ::HTL_Messaging_schema1::RequestCompleted_MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HTL_Messaging_schema1::RequestCompleted_MessageID>() {
  return ::HTL_Messaging_schema1::RequestCompleted_MessageID_descriptor();
}
template <> struct is_proto_enum< ::HTL_Messaging_schema1::AttemptReconnect_MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HTL_Messaging_schema1::AttemptReconnect_MessageID>() {
  return ::HTL_Messaging_schema1::AttemptReconnect_MessageID_descriptor();
}
template <> struct is_proto_enum< ::HTL_Messaging_schema1::SchemaAgreement_MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::HTL_Messaging_schema1::SchemaAgreement_MessageID>() {
  return ::HTL_Messaging_schema1::SchemaAgreement_MessageID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Boombox_5fHTLx_5fMessaging_2eproto__INCLUDED
