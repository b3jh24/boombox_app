// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RequestCompleted.proto

#ifndef PROTOBUF_RequestCompleted_2eproto__INCLUDED
#define PROTOBUF_RequestCompleted_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rc {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_RequestCompleted_2eproto();
void protobuf_AssignDesc_RequestCompleted_2eproto();
void protobuf_ShutdownFile_RequestCompleted_2eproto();

class RequestCompleted;

enum RequestCompleted_MessageID {
  RequestCompleted_MessageID_ID = 5
};
bool RequestCompleted_MessageID_IsValid(int value);
const RequestCompleted_MessageID RequestCompleted_MessageID_MessageID_MIN = RequestCompleted_MessageID_ID;
const RequestCompleted_MessageID RequestCompleted_MessageID_MessageID_MAX = RequestCompleted_MessageID_ID;
const int RequestCompleted_MessageID_MessageID_ARRAYSIZE = RequestCompleted_MessageID_MessageID_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestCompleted_MessageID_descriptor();
inline const ::std::string& RequestCompleted_MessageID_Name(RequestCompleted_MessageID value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestCompleted_MessageID_descriptor(), value);
}
inline bool RequestCompleted_MessageID_Parse(
    const ::std::string& name, RequestCompleted_MessageID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestCompleted_MessageID>(
    RequestCompleted_MessageID_descriptor(), name, value);
}
// ===================================================================

class RequestCompleted : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rc.RequestCompleted) */ {
 public:
  RequestCompleted();
  virtual ~RequestCompleted();

  RequestCompleted(const RequestCompleted& from);

  inline RequestCompleted& operator=(const RequestCompleted& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestCompleted& default_instance();

  void Swap(RequestCompleted* other);

  // implements Message ----------------------------------------------

  inline RequestCompleted* New() const { return New(NULL); }

  RequestCompleted* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestCompleted& from);
  void MergeFrom(const RequestCompleted& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestCompleted* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RequestCompleted_MessageID MessageID;
  static const MessageID ID =
    RequestCompleted_MessageID_ID;
  static inline bool MessageID_IsValid(int value) {
    return RequestCompleted_MessageID_IsValid(value);
  }
  static const MessageID MessageID_MIN =
    RequestCompleted_MessageID_MessageID_MIN;
  static const MessageID MessageID_MAX =
    RequestCompleted_MessageID_MessageID_MAX;
  static const int MessageID_ARRAYSIZE =
    RequestCompleted_MessageID_MessageID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageID_descriptor() {
    return RequestCompleted_MessageID_descriptor();
  }
  static inline const ::std::string& MessageID_Name(MessageID value) {
    return RequestCompleted_MessageID_Name(value);
  }
  static inline bool MessageID_Parse(const ::std::string& name,
      MessageID* value) {
    return RequestCompleted_MessageID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 transferID = 1;
  bool has_transferid() const;
  void clear_transferid();
  static const int kTransferIDFieldNumber = 1;
  ::google::protobuf::uint32 transferid() const;
  void set_transferid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rc.RequestCompleted)
 private:
  inline void set_has_transferid();
  inline void clear_has_transferid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 transferid_;
  friend void  protobuf_AddDesc_RequestCompleted_2eproto();
  friend void protobuf_AssignDesc_RequestCompleted_2eproto();
  friend void protobuf_ShutdownFile_RequestCompleted_2eproto();

  void InitAsDefaultInstance();
  static RequestCompleted* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestCompleted

// required uint32 transferID = 1;
inline bool RequestCompleted::has_transferid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestCompleted::set_has_transferid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestCompleted::clear_has_transferid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestCompleted::clear_transferid() {
  transferid_ = 0u;
  clear_has_transferid();
}
inline ::google::protobuf::uint32 RequestCompleted::transferid() const {
  // @@protoc_insertion_point(field_get:rc.RequestCompleted.transferID)
  return transferid_;
}
inline void RequestCompleted::set_transferid(::google::protobuf::uint32 value) {
  set_has_transferid();
  transferid_ = value;
  // @@protoc_insertion_point(field_set:rc.RequestCompleted.transferID)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace rc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::rc::RequestCompleted_MessageID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rc::RequestCompleted_MessageID>() {
  return ::rc::RequestCompleted_MessageID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RequestCompleted_2eproto__INCLUDED
